- hosts: all

  tasks:
    - name: Install workstation packages
      become: yes
      tags: ["apt"]
      apt:
          name: "{{ item }}"
          update_cache: yes
          state: latest
          force: yes
      with_items:
        - vim
        - git
        - zsh
        - htop
        - curl
        - wget
        - xbindkeys
        - xautomation
        # - tar
        # - unzip
        # - python

    - name: Install server packages
      become: yes
      tags: ["apt"]
      apt:
          name: "{{ item }}"
          update_cache: yes
          state: latest
          force: yes
      with_items:
        - fail2ban

    - name: NOPASSWD for sudo group
      lineinfile:
        dest: /etc/sudoers
        state: present
        regexp: '^%SUDO ALL\='
        line: '%SUDO ALL=(ALL) NOPASSWD:ALL'
        validate: 'visudo -cf %s'

    - name: Create user
      become: yes
      user:
        name: "{{ username }}"
        groups: sudo
        shell: /bin/zsh

    - name: Git clone Prezto
      become: yes
      become_method: su
      become_user: "{{ username }}"
      git:
          repo: https://github.com/sorin-ionescu/prezto.git
          dest: "/home/{{ username }}/.zprezto"

    - name: Install Prezto
      become: yes
      become_method: su
      become_user: "{{ username }}"
      file:
          path: "/home/{{ username }}/.{{ item }}"
          src: "/home/{{ username }}/.zprezto/runcoms/{{ item }}"
          state: link
          owner: "{{ username }}"
          group: "{{ username }}"
          mode: 0644
      with_items:
          - zlogin
          - zlogout

    - name: Git clone dotfiles
      become: yes
      become_method: su
      become_user: "{{ username }}"
      git:
          repo: "{{ dotfiles_git_repo }}"
          dest: "/home/{{ username }}/.dotfiles"
          accept_hostkey: True

    - name: Symlink dotfiles
      become: yes
      become_method: su
      become_user: "{{ username }}"
      command: "/home/{{ username }}/.dotfiles/link.sh"

    - name: Add SSH public key into user authorized_keys
    #   become_method: su
    #   become_user: "{{ username }}"
      authorized_key:
          user: "{{ username }}"
          key: "{{ github_public_keys }}"
